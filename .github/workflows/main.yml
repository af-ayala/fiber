name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  style:
    runs-on: centos7
    steps:
      - name: C++ Style Check (compiled)
        uses: Dal-Papa/actions-uncrustify@v1.2
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted
    # Add an element in this strategy matrix for each FFT library we want to test
    strategy:
      matrix:
        library: [heffte, fftw]
      fail-fast: false
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        
      - name: Set up dependencies
        run: |
          source .github/CI/spack_setup.sh
          sload gcc@7.3.0%gcc@4.8.5
          spack compiler find
          spack unload -a
          cp .github/CI/spack.yaml .
          spack env activate -d .
          spack install

      - name: Build with ${{ matrix.library }}
        run: |
          source .github/CI/spack_setup.sh
          spack env activate -d .
          spack load --first gcc cmake openmpi ${{ matrix.library }}
          mkdir build && cd build
          LIBRARY_DIR=`spack location -i ${{ matrix.library }}`
          MPI_DIR=`spack location -i openmpi`
          LIBNAME=${{ matrix.library }}
          cmake -DFIBER_ENABLE_${LIBNAME^^}=ON -DFIBER_FFT_INCLUDE_DIRS="$LIBRARY_DIR/include" -DFIBER_FFT_LIB_DIRS="$LIBRARY_DIR/lib" -DMPI_DIR=$MPI_DIR ..
          make VERBOSE=1
        
      - name: Test with ${{ matrix.library }}
        run: |
          source .github/CI/spack_setup.sh
          spack env activate -d .
          spack load --first gcc cmake openmpi ${{ matrix.library }}
          cd build/benchmarks          
          mpirun -n 2 ./test3D_CPU_C2C ${{ matrix.library }}
          mpirun -n 2 ./test3D_CPU_R2C ${{ matrix.library }}
          
